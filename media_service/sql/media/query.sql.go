// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: query.sql

package media_sql

import (
	"context"

	"github.com/google/uuid"
)

const createMedia = `-- name: CreateMedia :one
INSERT INTO media(media_id,owner_id)
VALUES ($1,$2) RETURNING id, media_id, owner_id
`

type CreateMediaParams struct {
	MediaID uuid.UUID `json:"mediaId"`
	OwnerID int32     `json:"ownerId"`
}

func (q *Queries) CreateMedia(ctx context.Context, arg CreateMediaParams) (Medium, error) {
	row := q.db.QueryRowContext(ctx, createMedia, arg.MediaID, arg.OwnerID)
	var i Medium
	err := row.Scan(&i.ID, &i.MediaID, &i.OwnerID)
	return i, err
}

const deleteMedia = `-- name: DeleteMedia :exec
DELETE FROM media WHERE media_id = $1
`

func (q *Queries) DeleteMedia(ctx context.Context, mediaID uuid.UUID) error {
	_, err := q.db.ExecContext(ctx, deleteMedia, mediaID)
	return err
}
